{"ast":null,"code":"var _jsxFileName = \"/Users/daksh/Downloads/Personal/Railway SIH/Darnex/railway-frontend/src/RailwayMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport svgMap from \"./railsvgmap.svg\";\n\n// stationCoordinates with km values + SVG x,y\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stationCoordinates = {\n  JJP: {\n    km: 0,\n    x: 150,\n    y: 810\n  },\n  // Jaipur Junction\n  BSGD: {\n    km: 3,\n    x: 1060,\n    y: 930\n  },\n  // Bais Godam\n  DKBJ: {\n    km: 6,\n    x: 2030,\n    y: 810\n  },\n  // Dahar Ka Balaji\n  GADJ: {\n    km: 10,\n    x: 2770,\n    y: 820\n  },\n  // Gandhinagar Jaipur\n  DPA: {\n    km: 15,\n    x: 3800,\n    y: 890\n  },\n  // Durgapura\n  KNP: {\n    km: 18,\n    x: 4420,\n    y: 890\n  },\n  // Kanakpura\n  GTJT: {\n    km: 22,\n    x: 4900,\n    y: 900\n  },\n  // Getor Jagatpura\n  NDH: {\n    km: 25,\n    x: 5490,\n    y: 820\n  },\n  // Nindhar Benar\n  SNGN: {\n    km: 30,\n    x: 6180,\n    y: 890\n  },\n  // Sanganer\n  BDYK: {\n    km: 35,\n    x: 7430,\n    y: 900\n  },\n  // Bindayaka\n  KWP: {\n    km: 40,\n    x: 8460,\n    y: 880\n  } // Khatipura\n};\n\n// Convert km â†’ SVG x,y by interpolating between two nearest stations\nfunction getTrainCoordinates(position_km) {\n  const stations = Object.values(stationCoordinates).sort((a, b) => a.km - b.km);\n  for (let i = 0; i < stations.length - 1; i++) {\n    const s1 = stations[i];\n    const s2 = stations[i + 1];\n    if (position_km >= s1.km && position_km <= s2.km) {\n      const ratio = (position_km - s1.km) / (s2.km - s1.km);\n      const x = s1.x + ratio * (s2.x - s1.x);\n      const y = s1.y + ratio * (s2.y - s1.y);\n      return {\n        x,\n        y\n      };\n    }\n  }\n\n  // If out of bounds, clamp to first/last station\n  if (position_km <= stations[0].km) return {\n    x: stations[0].x,\n    y: stations[0].y\n  };\n  if (position_km >= stations[stations.length - 1].km) return {\n    x: stations[stations.length - 1].x,\n    y: stations[stations.length - 1].y\n  };\n  return null;\n}\nexport default function RailwayMap() {\n  _s();\n  const [trains, setTrains] = useState([]);\n  useEffect(() => {\n    const fetchTrains = async () => {\n      try {\n        const res = await fetch(\"http://localhost:3001/api/trains\");\n        const data = await res.json();\n        setTrains(data);\n      } catch (err) {\n        console.error(\"Error fetching trains:\", err);\n      }\n    };\n    fetchTrains();\n    const interval = setInterval(fetchTrains, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: svgMap,\n      alt: \"Railway Map\",\n      style: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        pointerEvents: \"none\"\n      },\n      children: trains.map(train => {\n        const station = stationCoordinates[train.station_code]; // backend must provide station_code\n        if (!station) return null;\n        return /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: station.x / 15 // ðŸ”´ scale down to fit the resized SVG\n          ,\n          cy: station.y / 15,\n          r: 6,\n          fill: \"red\",\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: [train.train_no, \" @ \", train.station_code, \" \\u2013 \", train.speed_kmph, \" km/h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, train.train_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(RailwayMap, \"b108wzI25qLIUDtvQA3yPWDuTsA=\");\n_c = RailwayMap;\nvar _c;\n$RefreshReg$(_c, \"RailwayMap\");","map":{"version":3,"names":["React","useEffect","useState","svgMap","jsxDEV","_jsxDEV","stationCoordinates","JJP","km","x","y","BSGD","DKBJ","GADJ","DPA","KNP","GTJT","NDH","SNGN","BDYK","KWP","getTrainCoordinates","position_km","stations","Object","values","sort","a","b","i","length","s1","s2","ratio","RailwayMap","_s","trains","setTrains","fetchTrains","res","fetch","data","json","err","console","error","interval","setInterval","clearInterval","style","position","children","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","top","left","height","pointerEvents","map","train","station","station_code","cx","cy","r","fill","train_no","speed_kmph","train_id","_c","$RefreshReg$"],"sources":["/Users/daksh/Downloads/Personal/Railway SIH/Darnex/railway-frontend/src/RailwayMap.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport svgMap from \"./railsvgmap.svg\";\n\n// stationCoordinates with km values + SVG x,y\nconst stationCoordinates = {\n    JJP:  { km: 0,  x: 150,  y: 810 },   // Jaipur Junction\n    BSGD: { km: 3,  x: 1060, y: 930 },   // Bais Godam\n    DKBJ: { km: 6,  x: 2030, y: 810 },   // Dahar Ka Balaji\n    GADJ: { km: 10, x: 2770, y: 820 },   // Gandhinagar Jaipur\n    DPA:  { km: 15, x: 3800, y: 890 },   // Durgapura\n    KNP:  { km: 18, x: 4420, y: 890 },   // Kanakpura\n    GTJT: { km: 22, x: 4900, y: 900 },   // Getor Jagatpura\n    NDH:  { km: 25, x: 5490, y: 820 },   // Nindhar Benar\n    SNGN: { km: 30, x: 6180, y: 890 },   // Sanganer\n    BDYK: { km: 35, x: 7430, y: 900 },   // Bindayaka\n    KWP:  { km: 40, x: 8460, y: 880 },   // Khatipura\n  };\n  \n  // Convert km â†’ SVG x,y by interpolating between two nearest stations\n  function getTrainCoordinates(position_km) {\n    const stations = Object.values(stationCoordinates).sort((a, b) => a.km - b.km);\n  \n    for (let i = 0; i < stations.length - 1; i++) {\n      const s1 = stations[i];\n      const s2 = stations[i + 1];\n  \n      if (position_km >= s1.km && position_km <= s2.km) {\n        const ratio = (position_km - s1.km) / (s2.km - s1.km);\n  \n        const x = s1.x + ratio * (s2.x - s1.x);\n        const y = s1.y + ratio * (s2.y - s1.y);\n  \n        return { x, y };\n      }\n    }\n  \n    // If out of bounds, clamp to first/last station\n    if (position_km <= stations[0].km) return { x: stations[0].x, y: stations[0].y };\n    if (position_km >= stations[stations.length - 1].km) return { x: stations[stations.length - 1].x, y: stations[stations.length - 1].y };\n  \n    return null;\n  }\n  \n  \n\nexport default function RailwayMap() {\n  const [trains, setTrains] = useState([]);\n\n  useEffect(() => {\n    const fetchTrains = async () => {\n      try {\n        const res = await fetch(\"http://localhost:3001/api/trains\");\n        const data = await res.json();\n        setTrains(data);\n      } catch (err) {\n        console.error(\"Error fetching trains:\", err);\n      }\n    };\n\n    fetchTrains();\n    const interval = setInterval(fetchTrains, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <img src={svgMap} alt=\"Railway Map\" style={{ width: \"100%\" }} />\n\n      <svg\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          pointerEvents: \"none\",\n        }}\n      >\n        {trains.map((train) => {\n          const station = stationCoordinates[train.station_code]; // backend must provide station_code\n          if (!station) return null;\n\n          return (\n            <circle\n              key={train.train_id}\n              cx={station.x / 15} // ðŸ”´ scale down to fit the resized SVG\n              cy={station.y / 15}\n              r={6}\n              fill=\"red\"\n            >\n              <title>\n                {train.train_no} @ {train.station_code} â€“ {train.speed_kmph} km/h\n              </title>\n            </circle>\n          );\n        })}\n      </svg>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}