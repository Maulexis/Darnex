{"ast":null,"code":"var _jsxFileName = \"/Users/daksh/Downloads/Personal/Railway SIH/Darnex/railway-frontend/src/RailwayMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport svgMap from \"./railsvgmap.svg\"; // âœ… your SVG\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RailwayMap() {\n  _s();\n  const [trains, setTrains] = useState([]);\n\n  // Fetch trains every 5 seconds\n  useEffect(() => {\n    const fetchTrains = async () => {\n      try {\n        const res = await fetch(\"http://localhost:3001/api/trains\");\n        const data = await res.json();\n        setTrains(data); // backend should send array of trains\n      } catch (err) {\n        console.error(\"Error fetching trains:\", err);\n      }\n    };\n    fetchTrains();\n    const interval = setInterval(fetchTrains, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: svgMap,\n      alt: \"Railway Map\",\n      style: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        pointerEvents: \"none\"\n      },\n      children: trains.map(train => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: 100 + train.position_km * 20 // ðŸ”´ fake mapping: adjust scaling\n        ,\n        cy: 200 // fix to match your station line\n        ,\n        r: 8,\n        fill: \"red\",\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: [train.train_no, \" - \", train.speed_kmph, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, train.train_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(RailwayMap, \"b108wzI25qLIUDtvQA3yPWDuTsA=\");\n_c = RailwayMap;\nvar _c;\n$RefreshReg$(_c, \"RailwayMap\");","map":{"version":3,"names":["React","useEffect","useState","svgMap","jsxDEV","_jsxDEV","RailwayMap","_s","trains","setTrains","fetchTrains","res","fetch","data","json","err","console","error","interval","setInterval","clearInterval","style","position","children","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","top","left","height","pointerEvents","map","train","cx","position_km","cy","r","fill","train_no","speed_kmph","train_id","_c","$RefreshReg$"],"sources":["/Users/daksh/Downloads/Personal/Railway SIH/Darnex/railway-frontend/src/RailwayMap.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport svgMap from \"./railsvgmap.svg\"; // âœ… your SVG\n\nexport default function RailwayMap() {\n  const [trains, setTrains] = useState([]);\n\n  // Fetch trains every 5 seconds\n  useEffect(() => {\n    const fetchTrains = async () => {\n      try {\n        const res = await fetch(\"http://localhost:3001/api/trains\");\n        const data = await res.json();\n        setTrains(data); // backend should send array of trains\n      } catch (err) {\n        console.error(\"Error fetching trains:\", err);\n      }\n    };\n\n    fetchTrains();\n    const interval = setInterval(fetchTrains, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      {/* Render background SVG */}\n      <img src={svgMap} alt=\"Railway Map\" style={{ width: \"100%\" }} />\n\n      {/* Overlay trains */}\n      <svg\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          pointerEvents: \"none\",\n        }}\n      >\n        {trains.map((train) => (\n          <circle\n            key={train.train_id}\n            cx={100 + train.position_km * 20} // ðŸ”´ fake mapping: adjust scaling\n            cy={200} // fix to match your station line\n            r={8}\n            fill=\"red\"\n          >\n            <title>{train.train_no} - {train.speed_kmph} km/h</title>\n          </circle>\n        ))}\n      </svg>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;QAC3D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7BL,SAAS,CAACI,IAAI,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC9C;IACF,CAAC;IAEDL,WAAW,CAAC,CAAC;IACb,MAAMQ,QAAQ,GAAGC,WAAW,CAACT,WAAW,EAAE,IAAI,CAAC;IAC/C,OAAO,MAAMU,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKgB,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,gBAEnClB,OAAA;MAAKmB,GAAG,EAAErB,MAAO;MAACsB,GAAG,EAAC,aAAa;MAACJ,KAAK,EAAE;QAAEK,KAAK,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGhEzB,OAAA;MACEgB,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBS,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPN,KAAK,EAAE,MAAM;QACbO,MAAM,EAAE,MAAM;QACdC,aAAa,EAAE;MACjB,CAAE;MAAAX,QAAA,EAEDf,MAAM,CAAC2B,GAAG,CAAEC,KAAK,iBAChB/B,OAAA;QAEEgC,EAAE,EAAE,GAAG,GAAGD,KAAK,CAACE,WAAW,GAAG,EAAG,CAAC;QAAA;QAClCC,EAAE,EAAE,GAAI,CAAC;QAAA;QACTC,CAAC,EAAE,CAAE;QACLC,IAAI,EAAC,KAAK;QAAAlB,QAAA,eAEVlB,OAAA;UAAAkB,QAAA,GAAQa,KAAK,CAACM,QAAQ,EAAC,KAAG,EAACN,KAAK,CAACO,UAAU,EAAC,OAAK;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GANpDM,KAAK,CAACQ,QAAQ;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CAlDuBD,UAAU;AAAAuC,EAAA,GAAVvC,UAAU;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}