{"ast":null,"code":"var _jsxFileName = \"/Users/daksh/Downloads/Personal/Railway SIH/Darnex/railway-frontend/src/RailwayMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport mapSvg from \"./railsvgmap.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RailwayMap() {\n  _s();\n  const [trains, setTrains] = useState([]);\n  const [maxDistance, setMaxDistance] = useState(1); // default 1km to avoid div/0\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch(\"http://localhost:3001/api/map-layout\");\n        const data = await res.json();\n\n        // Save trains\n        setTrains(data.layers.realtime || []);\n\n        // Find max track distance from DB\n        if (data.layers.tracks && data.layers.tracks.length > 0) {\n          const maxDist = Math.max(...data.layers.tracks.map(t => Number(t.distance_km) || 0));\n          setMaxDistance(maxDist);\n        }\n      } catch (err) {\n        console.error(\"Error fetching trains:\", err);\n      }\n    }\n    fetchData();\n    const interval = setInterval(fetchData, 5000); // refresh every 5s\n    return () => clearInterval(interval);\n  }, []);\n\n  // SVG dimensions (from DevTools bounding box)\n  const svgWidth = 872;\n  const svgHeight = 69;\n  const scaleX = svgWidth / maxDistance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDE86 Railway Live Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        display: \"inline-block\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: mapSvg,\n        alt: \"Railway Map\",\n        style: {\n          width: svgWidth\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), trains.map(t => {\n        const x = (t.position_km || 0) * scaleX;\n        const y = svgHeight / 2; // train in middle of track\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            left: `${x}px`,\n            top: `${y}px`,\n            width: \"10px\",\n            height: \"10px\",\n            borderRadius: \"50%\",\n            background: \"red\",\n            transform: \"translate(-50%, -50%)\"\n          },\n          title: `Train ${t.train_id} (${t.speed_kmph} km/h)`\n        }, t.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(RailwayMap, \"EJH+6Yqjik2CBFGfxGIt9YnABtQ=\");\n_c = RailwayMap;\nvar _c;\n$RefreshReg$(_c, \"RailwayMap\");","map":{"version":3,"names":["React","useEffect","useState","mapSvg","jsxDEV","_jsxDEV","RailwayMap","_s","trains","setTrains","maxDistance","setMaxDistance","fetchData","res","fetch","data","json","layers","realtime","tracks","length","maxDist","Math","max","map","t","Number","distance_km","err","console","error","interval","setInterval","clearInterval","svgWidth","svgHeight","scaleX","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","position","display","src","alt","width","x","position_km","y","left","top","height","borderRadius","background","transform","title","train_id","speed_kmph","id","_c","$RefreshReg$"],"sources":["/Users/daksh/Downloads/Personal/Railway SIH/Darnex/railway-frontend/src/RailwayMap.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport mapSvg from \"./railsvgmap.svg\";\n\nexport default function RailwayMap() {\n  const [trains, setTrains] = useState([]);\n  const [maxDistance, setMaxDistance] = useState(1); // default 1km to avoid div/0\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch(\"http://localhost:3001/api/map-layout\");\n        const data = await res.json();\n\n        // Save trains\n        setTrains(data.layers.realtime || []);\n\n        // Find max track distance from DB\n        if (data.layers.tracks && data.layers.tracks.length > 0) {\n          const maxDist = Math.max(\n            ...data.layers.tracks.map((t) => Number(t.distance_km) || 0)\n          );\n          setMaxDistance(maxDist);\n        }\n      } catch (err) {\n        console.error(\"Error fetching trains:\", err);\n      }\n    }\n\n    fetchData();\n    const interval = setInterval(fetchData, 5000); // refresh every 5s\n    return () => clearInterval(interval);\n  }, []);\n\n  // SVG dimensions (from DevTools bounding box)\n  const svgWidth = 872;\n  const svgHeight = 69;\n  const scaleX = svgWidth / maxDistance;\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h2>ðŸš† Railway Live Map</h2>\n      <div style={{ position: \"relative\", display: \"inline-block\" }}>\n        <img src={mapSvg} alt=\"Railway Map\" style={{ width: svgWidth }} />\n        {trains.map((t) => {\n          const x = (t.position_km || 0) * scaleX;\n          const y = svgHeight / 2; // train in middle of track\n          return (\n            <div\n              key={t.id}\n              style={{\n                position: \"absolute\",\n                left: `${x}px`,\n                top: `${y}px`,\n                width: \"10px\",\n                height: \"10px\",\n                borderRadius: \"50%\",\n                background: \"red\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n              title={`Train ${t.train_id} (${t.speed_kmph} km/h)`}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}