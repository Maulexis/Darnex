{"ast":null,"code":"var _jsxFileName = \"/Users/daksh/Downloads/Personal/Railway SIH/Darnex/railway-frontend/src/RailwayMap.jsx\",\n  _s = $RefreshSig$();\n// src/RailwayMap.jsx\nimport React, { useEffect, useState } from \"react\";\nimport railsvg from \"./railsvgmap.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RailwayMap() {\n  _s();\n  const [trains, setTrains] = useState([]);\n\n  // Fetch trains from backend\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch(\"http://localhost:3001/api/map-layout\");\n        const data = await res.json();\n        setTrains(data.layers.realtime || []);\n      } catch (err) {\n        console.error(\"Error fetching trains:\", err);\n      }\n    }\n    fetchData();\n    const interval = setInterval(fetchData, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Dummy position mapping (just to TEST if dots render)\n  const mapToSvgCoords = train => {\n    const from = stationCoords[train.from_station_code];\n    const to = stationCoords[train.to_station_code];\n    if (!from || !to) return {\n      x: 0,\n      y: 0\n    };\n    const frac = (train.position_km || 0) / (train.distance_km || 1);\n    const x = from.x + frac * (to.x - from.x);\n    const y = from.y + frac * (to.y - from.y);\n    return {\n      x,\n      y\n    };\n  };\n\n  // Approximate station anchor points in SVG coordinates\n  const stationCoords = {\n    \"JP\": {\n      x: 150,\n      y: 250\n    },\n    // Jaipur\n    \"BDYK\": {\n      x: 350,\n      y: 250\n    },\n    // Bindayaka\n    \"DPA\": {\n      x: 550,\n      y: 250\n    },\n    // Durgapura\n    \"GADJ\": {\n      x: 750,\n      y: 250\n    },\n    // Gandhinagar\n    \"KXJ\": {\n      x: 950,\n      y: 250\n    } // Kanakpura\n    // add more stations here...\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDE86 Railway Live Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        display: \"inline-block\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: railsvg,\n        alt: \"Railway Map\",\n        style: {\n          width: \"100%\",\n          display: \"block\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), trains.map((train, i) => {\n        const {\n          x,\n          y\n        } = mapToSvgCoords(train, i);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            top: `${y}px`,\n            left: `${x}px`,\n            width: \"14px\",\n            height: \"14px\",\n            borderRadius: \"50%\",\n            backgroundColor: \"red\",\n            border: \"2px solid white\",\n            zIndex: 10,\n            // ensure dot is above the SVG\n            transform: \"translate(-50%, -50%)\"\n          },\n          title: `Train ${train.train_id} | ${train.speed_kmph} km/h`\n        }, train.id || i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(RailwayMap, \"b108wzI25qLIUDtvQA3yPWDuTsA=\");\n_c = RailwayMap;\nvar _c;\n$RefreshReg$(_c, \"RailwayMap\");","map":{"version":3,"names":["React","useEffect","useState","railsvg","jsxDEV","_jsxDEV","RailwayMap","_s","trains","setTrains","fetchData","res","fetch","data","json","layers","realtime","err","console","error","interval","setInterval","clearInterval","mapToSvgCoords","train","from","stationCoords","from_station_code","to","to_station_code","x","y","frac","position_km","distance_km","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","position","display","width","src","alt","map","i","top","left","height","borderRadius","backgroundColor","border","zIndex","transform","title","train_id","speed_kmph","id","_c","$RefreshReg$"],"sources":["/Users/daksh/Downloads/Personal/Railway SIH/Darnex/railway-frontend/src/RailwayMap.jsx"],"sourcesContent":["// src/RailwayMap.jsx\nimport React, { useEffect, useState } from \"react\";\nimport railsvg from \"./railsvgmap.svg\";\n\nexport default function RailwayMap() {\n  const [trains, setTrains] = useState([]);\n\n  // Fetch trains from backend\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch(\"http://localhost:3001/api/map-layout\");\n        const data = await res.json();\n        setTrains(data.layers.realtime || []);\n      } catch (err) {\n        console.error(\"Error fetching trains:\", err);\n      }\n    }\n\n    fetchData();\n    const interval = setInterval(fetchData, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Dummy position mapping (just to TEST if dots render)\n  const mapToSvgCoords = (train) => {\n    const from = stationCoords[train.from_station_code];\n    const to = stationCoords[train.to_station_code];\n  \n    if (!from || !to) return { x: 0, y: 0 };\n  \n    const frac = (train.position_km || 0) / (train.distance_km || 1);\n    const x = from.x + frac * (to.x - from.x);\n    const y = from.y + frac * (to.y - from.y);\n  \n    return { x, y };\n  };\n  \n  // Approximate station anchor points in SVG coordinates\nconst stationCoords = {\n    \"JP\": { x: 150, y: 250 },     // Jaipur\n    \"BDYK\": { x: 350, y: 250 },   // Bindayaka\n    \"DPA\": { x: 550, y: 250 },    // Durgapura\n    \"GADJ\": { x: 750, y: 250 },   // Gandhinagar\n    \"KXJ\": { x: 950, y: 250 },    // Kanakpura\n    // add more stations here...\n  };\n  \n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h2>ðŸš† Railway Live Map</h2>\n\n      {/* SVG Container */}\n      <div style={{ position: \"relative\", display: \"inline-block\", width: \"100%\" }}>\n        {/* Base SVG */}\n        <img src={railsvg} alt=\"Railway Map\" style={{ width: \"100%\", display: \"block\" }} />\n\n        {/* Train overlays */}\n        {trains.map((train, i) => {\n          const { x, y } = mapToSvgCoords(train, i);\n          return (\n            <div\n              key={train.id || i}\n              style={{\n                position: \"absolute\",\n                top: `${y}px`,\n                left: `${x}px`,\n                width: \"14px\",\n                height: \"14px\",\n                borderRadius: \"50%\",\n                backgroundColor: \"red\",\n                border: \"2px solid white\",\n                zIndex: 10, // ensure dot is above the SVG\n                transform: \"translate(-50%, -50%)\",\n              }}\n              title={`Train ${train.train_id} | ${train.speed_kmph} km/h`}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}